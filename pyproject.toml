[tool.poetry]
name = "pytest-mock-resources"
version = "2.9.1"
description = "A pytest plugin for easily instantiating reproducible mock resources."
authors = [
    "Omar Khan <oakhan3@gmail.com>",
    "Dan Cardin <ddcardin@gmail.com>",
    "Gabriel Michael <gabriel.j.michael@gmail.com>",
    "Prateek Pisat <pisatprateek12@gmail.com>",
]
license = "MIT"
keywords = [ "pytest", "sqlalchemy", "docker", "fixture", "mock" ]
classifiers = [ "Framework :: Pytest" ]
repository = "https://github.com/schireson/pytest-mock-resources"
packages = [
    { include = "pytest_mock_resources", from = "src" },
]
readme = 'README.md'
include = [
    "*.md",
    "py.typed",
]

[tool.poetry.dependencies]
python = ">=3.7, <4"

pytest = {version = ">=1.0"}
sqlalchemy = {version = ">1.0, !=1.4.0, !=1.4.1, !=1.4.2, !=1.4.3, !=1.4.4, !=1.4.5, !=1.4.6, !=1.4.7, !=1.4.8, !=1.4.9, !=1.4.10, !=1.4.11, !=1.4.12, !=1.4.13, !=1.4.14, !=1.4.15, !=1.4.16, !=1.4.17, !=1.4.18, !=1.4.19, !=1.4.20, !=1.4.21, !=1.4.22, !=1.4.23"}

typing_extensions = "*"

# extra [postgres]
psycopg2 = {version = "*", optional = true}
psycopg2-binary = {version = "*", optional = true}
asyncpg = {version = "*", optional = true}

# extra [redshift]
moto = {version = "*", optional = true}
boto3 = {version = "*", optional = true}
sqlparse = {version = "*", optional = true}

# extra [mongo]
pymongo = {version = "*", optional = true}

# extra [redis]
redis = {version = "*", optional = true}

# extra [mysql]
pymysql = {version = ">=1.0", optional = true}

# extra [docker]
filelock = {version = "*", optional = true}
python-on-whales = {version = ">=0.22.0", optional = true}

[tool.poetry.dev-dependencies]
black = "22.3.0"
botocore = ">=1.10.84"
coverage = "*"
flake8 = "*"
isort = ">=5.0"
moto = ">=2.3.2"
mypy = {version = "0.982"}
pydocstyle = {version = "*"}
pytest-asyncio = "*"
pytest-xdist = "*"
responses = ">=0.23.0"
sqlalchemy-stubs = {version = "*"}
sqlalchemy2-stubs = "^0.0.2-alpha.19"
types-PyMySQL = "^1.0.2"
types-dataclasses = "^0.6.5"
types-filelock = "^3.2.7"
types-redis = "^3.5.6"
types-requests = "*"
types-six = "^1.16.0"

[tool.poetry.extras]
docker = ['python-on-whales', 'filelock']
postgres = ['psycopg2', 'python-on-whales', 'filelock']
postgres-binary = ['psycopg2-binary', 'python-on-whales', 'filelock']
postgres-async = ['asyncpg', 'python-on-whales', 'filelock']
redshift = ['boto3', 'moto', 'sqlparse', 'python-on-whales', 'filelock']
mongo = ['pymongo', 'python-on-whales', 'filelock']
moto = ['boto3', 'python-on-whales', 'filelock']
redis = ['redis', 'python-on-whales', 'filelock']
mysql = ['pymysql', 'python-on-whales', 'filelock']

[tool.poetry.plugins.pytest11]
pytest_mock_resources = "pytest_mock_resources"

[tool.poetry.scripts]
pmr = "pytest_mock_resources.cli:main"

[tool.isort]
profile = 'black'
known_first_party = 'app,tests'
line_length = 100
float_to_top=true
order_by_type = false
use_parentheses = true

[tool.black]
line_length = 100

[tool.mypy]
strict_optional = true
ignore_missing_imports = true
warn_unused_ignores = true
incremental = true
plugins = 'sqlalchemy.ext.mypy.plugin'
exclude = 'tests/examples'

[tool.pytest.ini_options]
doctest_optionflags = "NORMALIZE_WHITESPACE IGNORE_EXCEPTION_DETAIL ELLIPSIS"
addopts = "--doctest-modules -vv --ff --strict-markers"
norecursedirs = ".* build dist *.egg tests/examples"
pytester_example_dir = "tests/examples"
pmr_multiprocess_safe = true
markers = [
    "postgres",
    "redshift",
    "mongo",
    "redis",
    "mysql",
]
filterwarnings = [
  "error",
  "ignore:There is no current event loop:DeprecationWarning",
  "ignore:stream argument is deprecated. Use stream parameter in request directly:DeprecationWarning",
  "ignore:Boto3 will no longer support Python 3.7.*::boto3"
]

[build-system]
requires = ["poetry_core==1.0.8"]
build-backend = "poetry.core.masonry.api"
