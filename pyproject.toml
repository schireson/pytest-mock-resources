[tool.poetry]
name = "pytest-mock-resources"
version = "1.2.0"
description = "A pytest plugin for easily instantiating reproducible mock resources."
authors = [
    "Omar Khan <oakhan3@gmail.com>",
    "Dan Cardin <ddcardin@gmail.com>",
    "Gabriel Michael <gabriel.j.michael@gmail.com>",
    "Prateek Pisat <pisatprateek12@gmail.com>",
]
license = "MIT"
keywords = [ "pytest", "sqlalchemy", "docker", "fixture", "mock" ]
classifiers = [ "Framework :: Pytest" ]
repository = "https://github.com/schireson/pytest-mock-resources"
packages = [
    { include = "pytest_mock_resources", from = "src" },
]
readme = 'README.md'
include = [
    "*.md",
]

[tool.poetry.dependencies]
python = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*, <4"

docker = {version = ">= 2.5.1"}
functools32 = {version = "*", python = "~2.7"}
pytest = {version = ">=1.0"}
responses = "*"
sqlalchemy = "*"

# extra [postgres]
psycopg2 = {version = "*", optional = true}
psycopg2-binary = {version = "*", optional = true}

# extra [redshift]
moto = {version = "*", optional = true}
boto3 = {version = "*", optional = true}
sqlparse = {version = "*", optional = true}

# extra [mongo]
pymongo = {version = "*", optional = true}

# extra [redis]
redis = {version = "*", optional = true}

# extra [docs]
m2r = {version = "*", optional = true}
sphinx = {version = "*", optional = true}
sphinx-autobuild = {version = "*", optional = true}
sphinx_autodoc_typehints = {version = "*", optional = true}
sphinx_rtd_theme = {version = "*", optional = true}

[tool.poetry.dev-dependencies]
black = {version = "=>19.3b0", allow-prereleases = true, python = ">=3.6"}
coverage = "*"
flake8 = "*"
isort = "*"
mypy = {version = "*", python = ">=3.5"}
pydocstyle = {version = "*", python = ">=3.5"}
sqlalchemy-stubs = {version = "*", python = ">=3.5"}
pytest-xdist = "*"

[tool.poetry.extras]
postgres = ['psycopg2']
postgres-binary = ['psycopg2-binary']
redshift = ['boto3', 'moto', 'sqlparse']
mongo = ['pymongo']
redis = ['redis']
docs = ['sphinx', 'm2r', 'sphinx_rtd_theme', 'sphinx-autobuild']

[tool.poetry.plugins.pytest11]
pytest_mock_resources = "pytest_mock_resources"

[tool.poetry.scripts]
pmr = "pytest_mock_resources.cli:main"

[tool.isort]
default_section = 'FIRSTPARTY'
include_trailing_comma = true
indent = '    '
length_sort = false
line_length = 100
multi_line_output = 3
order_by_type = false
known_first_party = 'tests'
use_parentheses = true

[tool.black]
line_length = 100

[build-system]
requires = ["poetry>=0.12"]
build-backend = "poetry.masonry.api"
